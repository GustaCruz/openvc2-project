import RPi.GPIO as GPIO
import pyautogui
from time import sleep

# Setup GPIO pins for joystick
VRX_PIN = 17  # Pin for horizontal movement
VRY_PIN = 27  # Pin for vertical movement
SW_PIN = 22   # Pin for button press

GPIO.setmode(GPIO.BCM)
GPIO.setup(VRX_PIN, GPIO.IN)
GPIO.setup(VRY_PIN, GPIO.IN)
GPIO.setup(SW_PIN, GPIO.IN, pull_up_down=GPIO.PUD_UP)

def read_joystick():
    x_val = GPIO.input(VRX_PIN)
    y_val = GPIO.input(VRY_PIN)
    return x_val, y_val

def move_mouse(x, y):
    # Map joystick values to mouse movements
    if x == 0:  # Left
        pyautogui.moveRel(-10, 0)
    elif x == 1:  # Right
        pyautogui.moveRel(10, 0)
    
    if y == 0:  # Up
        pyautogui.moveRel(0, -10)
    elif y == 1:  # Down
        pyautogui.moveRel(0, 10)

def print_joystick_direction(x, y):
    if x == 0 and y == 1:
        print("Joystick moved Up")
    elif x == 0 and y == 0:
        print("Joystick moved Down")
    elif x == 1 and y == 1:
        print("Joystick moved Right")
    elif x == 1 and y == 0:
        print("Joystick moved Left")
    else:
        print("Joystick in Neutral position")

def print_button_state(prev_button_state):
    current_button_state = GPIO.input(SW_PIN) == 0
    if current_button_state and not prev_button_state:
        print("Button pressed")
    elif not current_button_state and prev_button_state:
        print("Button released")
    return current_button_state

prev_x, prev_y = read_joystick()
prev_button_state = GPIO.input(SW_PIN) == 0

try:
    while True:
        x, y = read_joystick()
        button_state = print_button_state(prev_button_state)
        
        if x != prev_x or y != prev_y:
            move_mouse(x, y)
            print_joystick_direction(x, y)
        
        prev_x, prev_y = x, y
        prev_button_state = button_state

        sleep(0.1)  # Add delay to avoid overwhelming the system

except KeyboardInterrupt:
    GPIO.cleanup()
